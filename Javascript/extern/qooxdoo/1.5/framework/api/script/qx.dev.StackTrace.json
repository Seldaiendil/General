{"attributes": {"fullName": "qx.dev.StackTrace", "packageName": "qx.dev", "isStatic": true, "type": "bootstrap", "name": "StackTrace"}, "type": "class", "children": [{"attributes": {"text": "<p>Methods to get information about the JavaScript call stack.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"access": "private", "isStatic": true, "name": "__fileNameToClassName"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "fileName"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">URL</span> of the JavaScript file</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert an <span class=\"caps\">URL</span> of a JavaScript class into a class name if the file is named using\nthe qooxdoo naming conventions.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>class name of the file if conversion was possible. Otherwise the\n    fileName is returned unmodified.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getStackTrace"}, "type": "method", "children": [{"attributes": {"text": "<p>Get a stack trace of the current position in the code.</p>\n\n<p>Browser compatibility:\n<ul>\n  <li> Mozilla combines the output of {@link #getStackTraceFromError}\n       and {@link #getStackTraceFromCaller} and thus generates the richest trace.\n  </li>\n  <li> Internet Explorer and WebKit always use {@link #getStackTraceFromCaller}</li>\n  <li> Opera is able to return file/class names and line numbers.</li>\n</ul></p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Stack trace of the current position in the code. Each line in the array\n    represents one call in the stack trace.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getStackTraceFromCaller"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "args"}, "type": "param", "children": [{"attributes": {"text": "<p>arguments variable.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get a stack trace from the arguments special variable using the\n<code>caller</code> property. This is currently not supported\nfor Opera.</p>\n\n<p>This methods returns class/mixin and function names of each step\nin the call stack.</p>\n\n<p>Recursion is not supported.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Stack trace of caller of the function the arguments variable belongs to.\n    Each line in the array represents one call in the stack trace.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getStackTraceFromError"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "error"}, "type": "param", "children": [{"attributes": {"text": "<p>Error exception instance.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Error"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Try to get a stack trace from an Error object. Mozilla sets the field\n<code>stack</code> for Error objects thrown using <code>throw new Error()</code>.\nFrom this field it is possible to get a stack trace from the position\nthe exception was thrown at.</p>\n\n<p>This will get the JavaScript file names and the line numbers of each call.\nThe file names are converted into qooxdoo class names if possible.</p>\n\n<p>This works reliably in Gecko-based browsers. Later Opera versions and\nChrome also provide an useful stack trace. For Safari, only the class or\nfile name and line number where the error occurred are returned.\nIE 6/7/8 does not attach any stack information to error objects so an\nempty array is returned.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Stack trace of the exception. Each line in the array\n    represents one call in the stack trace.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String", "dimensions": 1}, "type": "entry"}]}]}]}]}]}